module.exports = {
    classSuffixes: ['node-color', 'node-size', 'label-placement', 'label-background'],
    selfLoopEdge: {
        'curve-style': 'bezier',
        'line-style': 'solid',
        'line-color': '#FF6D00',
        'target-arrow-color': '#FF6D00',
        'target-arrow-shape': 'triangle'
    },
    bipartiteStyles: {
        epi: {
            nodeColor: {
                'selector': '.epi-node-color',
                'style': {
                    'background-color': 'red',
                }
            },
            labelPlacement: {
                'selector': '.epi',
                'style': {
                    'text-halign': 'left',
                    'text-valign': 'center'
                }
            }
        },
        stroma: {
            nodeColor: {
                'selector': '.stroma-node-color',
                'style': {
                    'background-color': 'blue',
                }
            },
            labelPlacement: {
                'selector': '.stroma',
                'style': {
                    'text-halign': 'right',
                    'text-valign': 'center'
                }
            }
        }
    },
    nodeSize: {
        small: {
            'selector': 'node',
            'style': {
                'width': '8px',
                'height': '8px'
            }
        },
        medium: {
            'selector': 'node',
            'style': {
                'width': '12px',
                'height': '12px'
            }
        },
        large: {
            'selector': 'node',
            'style': {
                'width': '16px',
                'height': '16px'
            }
        },
        source: {
            'selector': '.sourceNode',
            'style': {
                'height': '30px',
                'width': '30px'
            }
        }
    },
    randomStyles: {
        stripedSourceEpi: {
            'selector': '.sourceNode.epi',
            'style': {
                'pie-size': '100%',
                'pie-1-background-color': '#D500F9',
                'pie-1-background-size': '50',
                'pie-2-background-color': 'red',
                'pie-2-background-size': '50',
                'height': '20px',
                'width': '20px'
            }
        },
        stripedSourceStroma: {
            'selector': '.sourceNode.stroma',
            'style': {
                'pie-size': '100%',
                'pie-1-background-color': '#D500F9',
                'pie-1-background-size': '50',
                'pie-2-background-color': 'blue',
                'pie-2-background-size': '50',
                'height': '20px',
                'width': '20px'
            }
        },
        labelBackground: {
            'selector': 'node',
            'style': {
                'text-background-color': 'yellow',
                'text-background-opacity': '0.1'
            }
        }
    },
    edgeWeights: {
        positive: {
            selector: 'edge[weight>=0]',
            style: {
                width: '',
                'line-color': 'black',
                opacity: ''
            }
        },
        negative: {
            selector: 'edge[weight<0]',
            style: {
                width: '',
                'line-color': 'cyan',
                'line-style': 'dashed',
                opacity: ''
            }
        }
    },
    getDynamicWidth: getDynamicWidth,
    getDynamicColor: getDynamicColor,
    getDynamicOpacity: function(property, min, max) {
        if (min < 0) {
            return 'mapData(' + property + ',' + min + ',' + max + ',' + 1 + "," + 0.3 + ")"
        } else {
            return 'mapData(' + property + ',' + min + ',' + max + ',' + 0.3 + "," + 1 + ")"
        }
    },
    setDynamicEdgeStyles: setDynamicEdgeStyles
}


function getDynamicWidth(property, min, max) {
    if (min == max) {
        return "1px";
    }

    if (min < 0) {
        var width = Math.abs(Math.floor((min - max) * 10)) > 5 ? Math.abs(Math.floor((min - max) * 10)) : 5;
        return 'mapData(' + property + ',' + min + ',' + max + ',' + width + "px" + "," + "1px" + ")"
    } else {
        var width = Math.abs(Math.floor((max - min) * 10)) > 5 ? Math.abs(Math.floor((max - min) * 10)) : 5;
        return 'mapData(' + property + ',' + min + ',' + max + ',' + "1px" + "," + width + "px" + ")"
    }
}

function getDynamicColor(property, min, max) {
    if (min == max) {
        return 'black';
    }

    if (min < 0) {
        return 'mapData(' + property + ',' + min + ',' + max + ',' + "#ff9900" + "," + "#ffd699" + ")"
    } else {
        return 'mapData(' + property + ',' + min + ',' + max + ',' + "#f2f2f2" + "," + "black" + ")"
    }
}

function setDynamicEdgeStyles(edgeStyleNegative, edgeStylePositive, overallWeights) {
    edgeStyleNegative.style.width = getDynamicWidth('weight', overallWeights.minNegative, overallWeights.maxNegative);
    edgeStyleNegative.style['line-color'] = getDynamicColor('weight', overallWeights.minNegative, overallWeights.maxNegative);

    edgeStylePositive.style.width = getDynamicWidth('weight', overallWeights.minPositive, overallWeights.maxPositive);
    edgeStylePositive.style['line-color'] = getDynamicColor('weight', overallWeights.minPositive, overallWeights.maxPositive);
}
