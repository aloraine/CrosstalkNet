'use strict'

function createEdgeDictionary(edges) {
    var dictionary = {};

    for (var i = 0; i < edges.length; i++) {
        var id = edges[i].data.source;
        if (id.endsWith('-E')) {
            if (dictionary[id] == null) {
                dictionary[id] = {};
            }

            dictionary[id][edges[i].data.target] = edges[i].data.weight;
        } else {
            id = edges[i].data.target;

            if (dictionary[id] == null) {
                dictionary[id] = {};
            }

            dictionary[id][edges[i].data.source] = edges[i].data.weight;
        }
    }

    return dictionary;
}

function createEdgeDictionaryFromREdges(REdges) {
    var dictionary = {};

    for (var i = 0; i < REdges.length; i++) {
        var id = REdges[i].data.source;
        if (id.endsWith('-E')) {
            if (dictionary[id] == null) {
                dictionary[id] = {};
            }

            dictionary[id][REdges[i].data.target] = { weight: REdges[i].weight, normal: REdges[i].normal, tumor: REdges[i].tumor };
        } else {
            id = REdges[i].data.target;

            if (dictionary[id] == null) {
                dictionary[id] = {};
            }

            dictionary[id][REdges[i].data.source] = { weight: REdges[i].weight, normal: REdges[i].normal, tumor: REdges[i].tumor };
        }
    }

    return dictionary;
}

function getSelfLoops(edges) {
    var result = [];

    for (var i = 0; i < edges.length; i++) {
        var source = edges[i].data.source.substr(0, edges[i].data.source.length - 2);
        var target = edges[i].data.target.substr(0, edges[i].data.target.length - 2);

        if (source == target) {
            result.push(source);
            /*
            if (result.indexOf(source) < 0) {
               
            }*/
        }
    }

    return result;
}

module.exports = {
    createEdgeDictionary: createEdgeDictionary,
    getSelfLoops: getSelfLoops
};
