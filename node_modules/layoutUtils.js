module.exports = {
    positionNodesBipartite: function(nodes, epiX, stromaX, epiY, stromaY) {
        var epiIncrement = 0;
        var stromaIncrement = 0;

        for (var i = 0; i < nodes.length; i++) {
        	console.log(nodes[i].classes);
            if (nodes[i].classes == "epi") {
                nodes[i].position = {
                	x: epiX,
                    y: epiY + (20 * epiIncrement)
                };
                epiIncrement++;
            } else {
                nodes[i].position = {
                	x: stromaX,
                    y: stromaY + (20 * stromaIncrement)
                };
                stromaIncrement++;
            }
        }
    },
    positionNodesClustered: function(selectedGene, firstNeighbours, secondNeighbours, clusterNumber, totalClusters) {
    	var mainRadius = 200;
    	var firstNeighbourRadius = 40;
    	var secondNeighbourRadius = 80;

    	console.log("2 * Math.PI / Clusters: " + ( 2* Math.PI / totalClusters));
    	var selectedGeneAngle = ((2 * Math.PI) / totalClusters) * (clusterNumber + 1);

    	selectedGene.position = {
    		x: mainRadius * Math.cos(selectedGeneAngle),
    		y: mainRadius * Math.sin(selectedGeneAngle)
    	}

    	console.log(selectedGene.position);

    	for (var i = 0; i < firstNeighbours.length; i++) {
    		var firstNeighbourAngle = ((2 * Math.PI) / firstNeighbours.length) * (i + 1);
    		firstNeighbours[i].position = {
    			x: (firstNeighbourRadius * Math.cos(firstNeighbourAngle)) + selectedGene.x,
    			y: (firstNeighbourRadius * Math.sin(firstNeighbourAngle)) + selectedGene.y
    		}; 
    	}

    	for (var i = 0; i < secondNeighbours.length; i++) {
    		var secondNeighbourAngle = ((2 * Math.PI) / secondNeighbours.length) * i;
    		secondNeighbours[i].position = {
    			x: (secondNeighbourRadius * Math.cos(secondNeighbourAngle)) + selectedGene.x,
    			y: (secondNeighbourRadius * Math.sin(secondNeighbourAngle)) + selectedGene.y
    		}; 
    	}
    },
    createPresetLayout: function() {
        var layout = {
            name: "preset"
        };

        return layout;
    }
}
